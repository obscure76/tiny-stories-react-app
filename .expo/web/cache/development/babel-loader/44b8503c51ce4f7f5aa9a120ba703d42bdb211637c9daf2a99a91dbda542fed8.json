{"ast":null,"code":"import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\nimport NativeErrorManager from './NativeErrorManager';\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n  eventEmitter.addListener(onNewException, ({\n    message\n  }) => {\n    console.error(message);\n  });\n}\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobal.ExpoModulesCore_CodedError = CodedError;","map":{"version":3,"names":["EventEmitter","Platform","CodedError","NativeErrorManager","__DEV__","OS","onNewException","eventEmitter","addListener","message","console","error","global","ExpoModulesCore_CodedError"],"sources":["/Users/midhun/github/tiny-react-app/tinyStoriesReactApp/node_modules/expo-modules-core/src/sweet/setUpErrorManager.fx.ts"],"sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobal.ExpoModulesCore_CodedError = CodedError;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,UAAU,QAAQ,sBAAsB;AACjD,OAAOC,kBAAkB,MAAM,sBAAsB;AAErD,IAAIC,OAAO,IAAIH,QAAQ,CAACI,EAAE,KAAK,SAAS,IAAIF,kBAAkB,EAAE;EAC9D,MAAMG,cAAc,GAAG,4CAA4C;EACnE,MAAMC,YAAY,GAAG,IAAIP,YAAY,CAACG,kBAAkB,CAAC;EAEzDI,YAAY,CAACC,WAAW,CAACF,cAAc,EAAE,CAAC;IAAEG;EAAO,CAAuB,KAAI;IAC5EC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;EACxB,CAAC,CAAC;;AAGJ;AACAG,MAAM,CAACC,0BAA0B,GAAGX,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}